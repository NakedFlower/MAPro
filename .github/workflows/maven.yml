# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


# Writer: Jin Yu / 2025.08.08
# TODO 
# Docker 이미지 태그 + 푸시
# ECR 로그아웃 


name: CI/CD to AWS ECS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # 1. 소스코드 체크아웃
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

   # 2. JDK 17 설정 (필요 시 변경)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    # 3. Maven 빌드 (jar 생성)
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # 4. Docker 이미지 빌드
    - name: Build and push Docker image
      run: |
        docker build -t 544274214843.dkr.ecr.ap-northeast-2.amazonaws.com/mapro/backend:latest .
        docker push 544274214843.dkr.ecr.ap-northeast-2.amazonaws.com/mapro/backend:latest
        
    # 5. AWS 자격 증명 구성
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 6. ECR 로그인
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-2 \
        | docker login --username AWS --password-stdin 544274214843.dkr.ecr.ap-northeast-2.amazonaws.com

    # 7. ECS에 Deploy
    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster my-cluster \
          --service my-service \
          --force-new-deployment


